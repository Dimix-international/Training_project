{"version":3,"sources":["context/auth-context.ts","data.ts","components/Card.tsx","components/CardFilter/CardFilter.tsx","pages/Home/Home.tsx","pages/Post/Post.tsx","pages/NewPost/NewPost.tsx","pages/EditPost/EditedPost.tsx","hook/useAuth.ts","components/CustomLink/CustomLink.tsx","components/Navbar.tsx","Layout.tsx","hoc/RequireAuth.tsx","pages/About/About.tsx","pages/OurTeam/column.ts","pages/OurTeam/Table/PaginationTable.tsx","pages/OurTeam/OurTeam.tsx","pages/Products/GlobalFilter.tsx","pages/Products/Products.tsx","pages/Login/hook/useSignIn.ts","pages/Login/Form.tsx","pages/LoginPage/Login/Login.tsx","pages/Login/hook/useRegister.ts","pages/LoginPage/Register/Register.tsx","App.tsx","serviceWorker.ts","hook/react-query/query-client.ts","context/app-context.ts","reducer/app-reducer.ts","providers/AppProvider.tsx","helpers/helper-storage.ts","firebase.js","reducer/auth-reducer.ts","providers/AuthProvider.tsx","index.tsx","components/Navbar.module.scss","pages/Post/Post.module.scss","pages/About/About.module.scss","components/Card.module.scss","components/CardFilter/Card.Filter.module.scss","pages/Login/Login.module.scss","pages/LoginPage/LoginPage.module.scss","pages/Home/Home.module.scss","components/CustomLink/CustomLink.module.scss","pages/EditPost/EditedPost.module.scss","pages/OurTeam/Table/FilteringTable.module.css"],"names":["AuthActionOperationType","posts","id","title","img","desc","londDesc","Card","React","memo","post","className","s","card","link","to","image","src","alt","btn","CardFilter","props","setSearchParams","latest","postQuery","useState","tempSearch","setTempSearch","checked","setChecked","form","autoComplete","onSubmit","e","preventDefault","currentTarget","query","search","value","isLatest","params","length","input","type","name","onChange","labelCheckbox","htmlFor","checkbox","button","Home","useSearchParams","searchParams","get","has","startsFrom","home","container","row","filter","toLowerCase","includes","map","p","Post","navigate","useNavigate","useParams","find","toString","onClick","postDesc","longDesc","NewPost","EditedPost","replace","AuthContext","createContext","undefined","useAuth","context","useContext","Error","CustomLink","children","finallyClass","useMatch","path","end","active","addclass","Navbar","user","authUser","authDispatch","navbar","logo","list","list__item","avatar","Layout","RequireAuth","location","useLocation","state","from","AboutPage","about","about__links","GROUPED_COLUMNS","Header","Footer","accessor","disableFilters","columns","Cell","format","Date","PaginationTable","useMemo","data","MOCK_DATA","useTable","initialState","pageIndex","usePagination","getTableProps","getTableBodyProps","headerGroups","page","nextPage","previousPage","canNextPage","canPreviousPage","pageOptions","gotoPage","pageCount","setPageSize","prepareRow","pageSize","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","getRowProps","cells","cell","getCellProps","defaultValue","pageNumber","target","Number","disabled","OurTeam","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","count","setValue","useAsyncDebounce","placeholder","OurProducts","products","setProducts","fetchProducts","a","axios","response","console","log","productsData","productsColumns","Object","keys","key","tableInstance","useGlobalFilter","hooks","visibleColumns","push","alert","values","price","useSortBy","rows","isEven","index","useEffect","getSortByToggleProps","isSorted","isSortedDesc","signUser","email","password","auth","getAuth","signInWithEmailAndPassword","Form","callback","setName","setEmail","setPassword","login","inputs","pattern","submit","Login","fromPage","info","setInfo","useQuery","enabled","staleTime","cacheTime","onSuccess","payload","uid","error","isLoading","setInfoHandler","useCallback","useSignIn","pathname","style","marginTop","color","fontSize","letterSpacing","registerUser","createUserWithEmailAndPassword","Register","useRegister","App","element","Boolean","window","hostname","match","AppActionOperationType","queryClient","QueryClient","defaultOptions","queries","refetchOnWindowFocus","refetchOnMount","refetchOnReconnect","AppContext","appReducer","action","actions","AppProvider","useReducer","appState","appDispatch","Provider","PROJECT_INFO_LOCALSTORAGE_KEY","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","getInfoUserStorage","storedInfo","localStorage","getItem","JSON","parse","setInfoUserStorage","setItem","stringify","authReducer","AuthProvider","ReactDOM","client","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.d7c48a01.chunk.js","sourcesContent":["import {createContext} from \"react\";\r\nimport {userType} from \"../providers/AuthProvider\";\r\n\r\n\r\nexport enum AuthActionOperationType {\r\n    SetUser = 'set-user',\r\n    DeleteUser = 'delete-user',\r\n    Default = 'default'\r\n}\r\nexport type AuthActionsType = {\r\n    type: `${AuthActionOperationType}`,\r\n    payload?: userType\r\n}\r\n\r\nexport type AuthDispatchType = (action:AuthActionsType) => void;\r\nexport type AuthContextType = {authUser:userType, authDispatch:AuthDispatchType};\r\n\r\nexport const AuthContext = createContext<AuthContextType | undefined>(undefined)","\r\nexport type PostType = {\r\n    id:number,\r\n    title:string,\r\n    img:string,\r\n    desc:string,\r\n    londDesc: string\r\n}\r\nexport const posts: Array<PostType> = [\r\n    {\r\n        id:1,\r\n        title:'Цена вопроса не важна, когда солнечных дней всё меньше',\r\n        img: 'https://phonoteka.org/uploads/posts/2021-06/1624166435_34-phonoteka_org-p-okean-oboi-krasivo-40.jpg',\r\n        desc: 'Повседневная практика показывает, что граница обучения кадров выявляет срочную потребность системы массового участия.',\r\n        londDesc:'Консультация с широким активом предопределяет высокую востребованность стандартных подходов. Не следует, однако, забывать, что дальнейшее развитие различных форм деятельности позволяет оценить значение дальнейших направлений развития. Предварительные выводы неутешительны: высококачественный прототип будущего проекта предопределяет высокую востребованность системы обучения кадров, соответствующей насущным потребностям.'\r\n    },\r\n    {\r\n        id:2,\r\n        title:'Сплочённость команды профессионалов продолжает удивлять',\r\n        img: 'https://img3.goodfon.ru/wallpaper/nbig/e/59/ssha-boston-boston-doma.jpg',\r\n        desc: 'Повседневная практика показывает, что граница обучения кадров выявляет срочную потребность системы массового участия.',\r\n        londDesc:'Консультация с широким активом предопределяет высокую востребованность стандартных подходов. Не следует, однако, забывать, что дальнейшее развитие различных форм деятельности позволяет оценить значение дальнейших направлений развития. Предварительные выводы неутешительны: высококачественный прототип будущего проекта предопределяет высокую востребованность системы обучения кадров, соответствующей насущным потребностям.'\r\n    },\r\n    {\r\n        id:3,\r\n        title:'Дурное дело нехитрое: курс ценных бумаг даёт нам право принимать самостоятельные решенияДурное дело нехитрое: курс ценных бумаг даёт нам право принимать самостоятельные решения',\r\n        img: 'https://img3.goodfon.ru/wallpaper/nbig/e/59/ssha-boston-boston-doma.jpg',\r\n        desc: 'Повседневная практика показывает, что граница обучения кадров выявляет срочную потребность системы массового участия.',\r\n        londDesc:'Консультация с широким активом предопределяет высокую востребованность стандартных подходов. Не следует, однако, забывать, что дальнейшее развитие различных форм деятельности позволяет оценить значение дальнейших направлений развития. Предварительные выводы неутешительны: высококачественный прототип будущего проекта предопределяет высокую востребованность системы обучения кадров, соответствующей насущным потребностям.'\r\n    },\r\n    {\r\n        id:4,\r\n        title:'Господа, глубокий уровень погружения однозначно определяет каждого участника как способного принимать собственные решения касаемо благоприятных перспектив.',\r\n        img: 'https://phonoteka.org/uploads/posts/2021-06/1624166435_34-phonoteka_org-p-okean-oboi-krasivo-40.jpg',\r\n        desc: 'Мы вынуждены отталкиваться от того, что выбранный нами инновационный путь говорит о возможностях новых принципов формирования материально-технической и кадровой базы. Также как консультация с широким активом является качественно новой ступенью существующих финансовых и административных условий..',\r\n        londDesc:'Консультация с широким активом предопределяет высокую востребованность стандартных подходов. Не следует, однако, забывать, что дальнейшее развитие различных форм деятельности позволяет оценить значение дальнейших направлений развития. Предварительные выводы неутешительны: высококачественный прототип будущего проекта предопределяет высокую востребованность системы обучения кадров, соответствующей насущным потребностям.'\r\n    },\r\n    {\r\n        id:5,\r\n        title:'Непосредственные участники технического прогресса являются только методом политического участия и объективно рассмотрены соответствующими инстанциями.',\r\n        img: 'https://avatars.mds.yandex.net/get-zen_doc/5284326/pub_61279398344fe2562d48e488_6127939acf1e7754bb6bce3e/scale_1200',\r\n        desc: 'В своём стремлении улучшить пользовательский опыт мы упускаем, что ключевые особенности структуры проекта будут представлены в исключительно положительном свете! Учитывая ключевые сценарии поведения, базовый вектор развития способствует подготовке и реализации первоочередных требований.',\r\n        londDesc:'Консультация с широким активом предопределяет высокую востребованность стандартных подходов. Не следует, однако, забывать, что дальнейшее развитие различных форм деятельности позволяет оценить значение дальнейших направлений развития. Предварительные выводы неутешительны: высококачественный прототип будущего проекта предопределяет высокую востребованность системы обучения кадров, соответствующей насущным потребностям.'\r\n    },\r\n    {\r\n        id:6,\r\n        title:'Непосредственные инстанциями.',\r\n        img: 'https://img3.goodfon.ru/wallpaper/nbig/e/59/ssha-boston-boston-doma.jpg',\r\n        desc: 'В своём стремлении улучшить пользовательский опыт мы упускаем, что ключевые особенности структуры проекта будут представлены в исключительно положительном свете! Учитывая ключевые сценарии поведения, базовый вектор развития способствует подготовке и реализации первоочередных требований.',\r\n        londDesc:'Консультация с широким активом предопределяет высокую востребованность стандартных подходов. Не следует, однако, забывать, что дальнейшее развитие различных форм деятельности позволяет оценить значение дальнейших направлений развития. Предварительные выводы неутешительны: высококачественный прототип будущего проекта предопределяет высокую востребованность системы обучения кадров, соответствующей насущным потребностям.'\r\n    },\r\n    {\r\n        id:7,\r\n        title:'Цена вопроса не важна, когда солнечных дней всё меньше',\r\n        img: 'https://phonoteka.org/uploads/posts/2021-06/1624166435_34-phonoteka_org-p-okean-oboi-krasivo-40.jpg',\r\n        desc: 'Повседневная практика показывает, что граница обучения кадров выявляет срочную потребность системы массового участия.',\r\n        londDesc:'Консультация с широким активом предопределяет высокую востребованность стандартных подходов. Не следует, однако, забывать, что дальнейшее развитие различных форм деятельности позволяет оценить значение дальнейших направлений развития. Предварительные выводы неутешительны: высококачественный прототип будущего проекта предопределяет высокую востребованность системы обучения кадров, соответствующей насущным потребностям.'\r\n    },\r\n    {\r\n        id:8,\r\n        title:'Сплочённость команды профессионалов продолжает удивлять',\r\n        img: 'https://avatars.mds.yandex.net/get-zen_doc/5284326/pub_61279398344fe2562d48e488_6127939acf1e7754bb6bce3e/scale_1200',\r\n        desc: 'Повседневная практика показывает, что граница обучения кадров выявляет срочную потребность системы массового участия.',\r\n        londDesc:'Консультация с широким активом предопределяет высокую востребованность стандартных подходов. Не следует, однако, забывать, что дальнейшее развитие различных форм деятельности позволяет оценить значение дальнейших направлений развития. Предварительные выводы неутешительны: высококачественный прототип будущего проекта предопределяет высокую востребованность системы обучения кадров, соответствующей насущным потребностям.'\r\n    },\r\n    {\r\n        id:9,\r\n        title:'Дурное дело нехитрое: курс ценных бумаг даёт нам право принимать самостоятельные решенияДурное дело нехитрое: курс ценных бумаг даёт нам право принимать самостоятельные решения',\r\n        img: 'https://img3.goodfon.ru/wallpaper/nbig/e/59/ssha-boston-boston-doma.jpg',\r\n        desc: 'Повседневная практика показывает, что граница обучения кадров выявляет срочную потребность системы массового участия.',\r\n        londDesc:'Консультация с широким активом предопределяет высокую востребованность стандартных подходов. Не следует, однако, забывать, что дальнейшее развитие различных форм деятельности позволяет оценить значение дальнейших направлений развития. Предварительные выводы неутешительны: высококачественный прототип будущего проекта предопределяет высокую востребованность системы обучения кадров, соответствующей насущным потребностям.'\r\n    },\r\n    {\r\n        id:10,\r\n        title:'Господа, глубокий уровень погружения однозначно определяет каждого участника как способного принимать собственные решения касаемо благоприятных перспектив.',\r\n        img: 'https://phonoteka.org/uploads/posts/2021-06/1624166435_34-phonoteka_org-p-okean-oboi-krasivo-40.jpg',\r\n        desc: 'Мы вынуждены отталкиваться от того, что выбранный нами инновационный путь говорит о возможностях новых принципов формирования материально-технической и кадровой базы. Также как консультация с широким активом является качественно новой ступенью существующих финансовых и административных условий..',\r\n        londDesc:'Консультация с широким активом предопределяет высокую востребованность стандартных подходов. Не следует, однако, забывать, что дальнейшее развитие различных форм деятельности позволяет оценить значение дальнейших направлений развития. Предварительные выводы неутешительны: высококачественный прототип будущего проекта предопределяет высокую востребованность системы обучения кадров, соответствующей насущным потребностям.'\r\n    },\r\n    {\r\n        id:11,\r\n        title:'Непосредственные участники технического прогресса являются только методом политического участия и объективно рассмотрены соответствующими инстанциями.',\r\n        img: 'https://avatars.mds.yandex.net/get-zen_doc/5284326/pub_61279398344fe2562d48e488_6127939acf1e7754bb6bce3e/scale_1200',\r\n        desc: 'В своём стремлении улучшить пользовательский опыт мы упускаем, что ключевые особенности структуры проекта будут представлены в исключительно положительном свете! Учитывая ключевые сценарии поведения, базовый вектор развития способствует подготовке и реализации первоочередных требований.',\r\n        londDesc:'Консультация с широким активом предопределяет высокую востребованность стандартных подходов. Не следует, однако, забывать, что дальнейшее развитие различных форм деятельности позволяет оценить значение дальнейших направлений развития. Предварительные выводы неутешительны: высококачественный прототип будущего проекта предопределяет высокую востребованность системы обучения кадров, соответствующей насущным потребностям.'\r\n    },\r\n    {\r\n        id:12,\r\n        title:'Непосредственные инстанциями.',\r\n        img: 'https://img3.goodfon.ru/wallpaper/nbig/e/59/ssha-boston-boston-doma.jpg',\r\n        desc: 'В своём стремлении улучшить пользовательский опыт мы упускаем, что ключевые особенности структуры проекта будут представлены в исключительно положительном свете! Учитывая ключевые сценарии поведения, базовый вектор развития способствует подготовке и реализации первоочередных требований.',\r\n        londDesc:'Консультация с широким активом предопределяет высокую востребованность стандартных подходов. Не следует, однако, забывать, что дальнейшее развитие различных форм деятельности позволяет оценить значение дальнейших направлений развития. Предварительные выводы неутешительны: высококачественный прототип будущего проекта предопределяет высокую востребованность системы обучения кадров, соответствующей насущным потребностям.'\r\n    },\r\n]","import React from 'react';\r\nimport s from './Card.module.scss'\r\nimport {PostType} from \"../data\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\ntype CardType={\r\n    post: PostType\r\n}\r\nexport const Card: React.FC<CardType> = React.memo(({post}) => {\r\n    return (\r\n        <div className={s.card}>\r\n            <Link className={s.link} to={`/post/${post.id}`}>\r\n                <h2 className={s.title}>{post.title}</h2>\r\n                <div className={s.image}>\r\n                    <img src={post.img} alt=\"\"/>\r\n                </div>\r\n                <p className={s.desc}>{post.desc}</p>\r\n                <button className={s.btn}>Read more</button>\r\n            </Link>\r\n        </div>\r\n    );\r\n})","import React, {ChangeEvent, FormEvent, useState} from 'react';\r\nimport s from './Card.Filter.module.scss'\r\nimport {URLSearchParamsInit} from 'react-router-dom';\r\n\r\n\r\ntype CardFilterType = {\r\n    setSearchParams: (params: URLSearchParamsInit) => void\r\n    latest: boolean\r\n    postQuery: string\r\n}\r\n\r\nexport const CardFilter: React.FC<CardFilterType> = React.memo((props) => {\r\n\r\n    const {setSearchParams, latest, postQuery} = props;\r\n\r\n    const [tempSearch, setTempSearch] = useState(postQuery);\r\n    const [checked, setChecked] = useState(latest);\r\n\r\n    const onSubmitHandler = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        const form = e.currentTarget;\r\n        //получим то что пользователь набрал руками\r\n\r\n        const query = form.search.value;\r\n        const isLatest = form.latest.checked;\r\n\r\n        const params: URLSearchParamsInit = {};\r\n\r\n        if (query.length) params.title = query;\r\n        if (isLatest) params.latest = 'true';\r\n        //http://localhost:3000/?title=цена&latest=true\r\n\r\n        /*setSearchParams({title: query})*/\r\n        setSearchParams(params);\r\n\r\n    }\r\n    const changeTempSearch = (e: ChangeEvent<HTMLInputElement>) => setTempSearch(e.currentTarget.value);\r\n    const changeIsChecked = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\r\n\r\n    return (\r\n        <form className={s.form} autoComplete={'off'}\r\n              onSubmit={onSubmitHandler}>\r\n            <input className={s.input} type=\"search\"\r\n                   name={'search'} value={tempSearch}\r\n                   onChange={changeTempSearch}/>\r\n            <label className={s.labelCheckbox} htmlFor={'latest'}>\r\n                New only\r\n                <input id={'latest'} className={s.checkbox} type=\"checkbox\"\r\n                       name={'latest'} checked={checked}\r\n                       onChange={changeIsChecked}/>\r\n            </label>\r\n            <input className={s.button} type=\"submit\"\r\n                   value={'Search'}/>\r\n        </form>\r\n    )\r\n})","import React from 'react';\r\nimport s from './Home.module.scss'\r\nimport {posts} from \"../../data\";\r\nimport {Card} from \"../../components/Card\";\r\nimport {useSearchParams} from 'react-router-dom';\r\nimport {CardFilter} from \"../../components/CardFilter/CardFilter\";\r\n\r\n\r\ntype HomeType = {}\r\n\r\nexport const Home: React.FC<HomeType> = React.memo(() => {\r\n\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    const postQuery = searchParams.get('title') || ''; //поисковый запрос, || '' -если не найдет\r\n    // http://localhost:3000/?title\r\n\r\n    const latest = searchParams.has('latest');\r\n\r\n    const startsFrom = latest ? 10 : 1;\r\n    //если установлен то получаем статьи с 10 id, если нет то все\r\n\r\n    return (\r\n        <div className={s.home}>\r\n            <div className={s.container}>\r\n                <CardFilter\r\n                    setSearchParams={setSearchParams}\r\n                    latest={latest}\r\n                    postQuery={postQuery}\r\n                />\r\n                <div className={s.row}>\r\n                    {\r\n                        posts.filter(post =>\r\n                            post.title.toLowerCase().includes(postQuery.toLowerCase())\r\n                            && post.id >= startsFrom\r\n                        )\r\n                            .map(p => {\r\n                                return <Card\r\n                                    key={p.id}\r\n                                    post={p}\r\n                                />\r\n                            })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\n","import React from 'react';\r\nimport s from './Post.module.scss'\r\nimport {posts} from \"../../data\";\r\nimport {Link, useLocation, useParams, useNavigate} from 'react-router-dom';\r\n\r\n\r\ntype PostType = {}\r\nexport const Post: React.FC<PostType> = React.memo(() => {\r\n\r\n    //useNavigate - замена useHistory\r\n    const navigate = useNavigate(); //является функцией\r\n\r\n    //реализуем функцию \"назад\"\r\n    //-1 - на одну страницу назад (-2,3 т.д)\r\n    // можем использовать и положительные цифры - вперед\r\n    const goBack = () => navigate(-1)\r\n\r\n    const {id} = useParams();\r\n    const post = posts.find(p => p.id.toString() === id);\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={s.post}>\r\n            <div className={s.container}>\r\n                <button onClick={goBack} className={s.btn}>go back</button>\r\n                <h1 className={s.title}>{post && post.title}</h1>\r\n                <div className={s.image}>\r\n                    <img src={post && post.img} alt=\"\"/>\r\n                </div>\r\n                <p className={s.postDesc}>{post && post.desc}</p>\r\n                <p className={s.longDesc}>{post && post.londDesc}</p>\r\n                <Link className={s.link} to={`/post/${id}/edit`}>\r\n                    <button className={s.btn}>Edit post</button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\n","import React from 'react';\r\n\r\n\r\n\r\ntype PostType = {}\r\nexport const NewPost: React.FC<PostType> = React.memo(() => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            Создание нового поста\r\n        </div>\r\n    );\r\n})\r\n\r\n","import React from 'react';\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\nimport s from './EditedPost.module.scss'\r\n\r\n\r\ntype EditedPostType = {}\r\nexport const EditedPost: React.FC<EditedPostType> = React.memo(() => {\r\n\r\n    const {id} = useParams();\r\n\r\n    const navigate = useNavigate(); //является функцией\r\n    const goHome = () => navigate('/', {replace: true});\r\n    //если не передаем {replace: true} (по умолч false - то будет движение как по истории),\r\n    //если нужна переадресация то записываем {replace: true}\r\n    // {replace: true, state:} state:объект, строка, потом в том месте куда перейдем\r\n    // этот state можно прочитать\r\n\r\n    //использовать в качестве button - плохая практика, используем Link\r\n    // лучше использовать navigate например в useEffect после запроса, переадресация на страницу\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <button className={s.btn} onClick={goHome}> go home</button>\r\n            <div>\r\n                edit post - {id}\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\n","import {useContext} from \"react\";\r\nimport {AuthContext} from \"../context/auth-context\";\r\n\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if (!context) throw new Error('useShortLink must be used inside a ShortLink');\r\n    return context; //получаем доступ к контексту\r\n}\r\n","\r\nimport React from \"react\";\r\nimport { Link, useMatch } from \"react-router-dom\";\r\nimport s from './CustomLink.module.scss'\r\n\r\ntype CustomLinkType = {\r\n    to:string\r\n    addclass :string\r\n}\r\nexport const CustomLink: React.FC<CustomLinkType> = (\r\n    {children, to, ...props}) => {\r\n\r\n    // const match = useMatch(to);\r\n    //переработаем чтобы срабатывало во вложенных роутах когда about/team\r\n    const match = useMatch({\r\n        path: to, //главная страница\r\n        //если главная страница - то берем полный путь т.е. состоит только из /\r\n        end: to.length === 1\r\n    });\r\n    const finallyClass = match ? `${s.link} ${s.active} ${props.addclass}` : `${s.link} ${props.addclass}`\r\n\r\n    return (\r\n        <Link\r\n            to={to}\r\n            className={finallyClass}\r\n            {...props}\r\n        >\r\n            {children}\r\n        </Link>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Navbar.module.scss'\r\nimport {useAuth} from \"../hook/useAuth\";\r\nimport {CustomLink} from \"./CustomLink/CustomLink\";\r\n\r\ntype NavbarType = {};\r\n\r\nexport const Navbar: React.FC<NavbarType> = React.memo((props) => {\r\n        const {authUser: user, authDispatch} = useAuth();\r\n\r\n        const onClickHandler = () => {\r\n            authDispatch({type: 'delete-user'})\r\n        }\r\n\r\n        return (\r\n            <aside className={s.navbar}>\r\n                <div className={s.container}>\r\n                <span className={s.logo}>\r\n                <CustomLink addclass={s.link} to={'/'}>Dimix App</CustomLink>\r\n            </span>\r\n                    {\r\n                        user.name\r\n                            ? <>\r\n                                <ul className={s.list}>\r\n                                    <li className={s.list__item}>\r\n                                        <img className={s.avatar}\r\n                                             src=\"https://pngimg.com/uploads/chrome_logo/chrome_logo_PNG3.png\"\r\n                                             alt=\"avatar\"/>\r\n                                    </li>\r\n                                    <li className={s.list__item}>\r\n                                        {user.name}\r\n                                    </li>\r\n                                    <button onClick={onClickHandler} type={'button'}\r\n                                            className={s.btn}>\r\n                                        Sign out\r\n                                    </button>\r\n\r\n                                </ul>\r\n                                <CustomLink addclass={`${s.link} ${s.logo}`}\r\n                                            to={'/post/new'}> Create new\r\n                                    post</CustomLink>\r\n                            </>\r\n                            : <CustomLink addclass={s.link} to={'/login'}>Sign\r\n                                in</CustomLink>\r\n                    }\r\n                    <CustomLink addclass={s.link} to={'/about'}> About\r\n                        us</CustomLink>\r\n                </div>\r\n\r\n            </aside>\r\n        );\r\n    }\r\n)","import { Outlet } from \"react-router-dom\";\r\nimport {Navbar} from \"./components/Navbar\";\r\n\r\n\r\nexport const Layout = () => {\r\n\r\n    return (\r\n            <div>\r\n                <Navbar/>\r\n                <Outlet />\r\n            </div>\r\n    );\r\n}","import React from 'react';\r\nimport {useLocation, Navigate} from \"react-router-dom\";\r\nimport {useAuth} from \"../hook/useAuth\";\r\n\r\n\r\n//будет обеспечить переадресацию\r\ntype RequireAuthType = {}\r\nexport const RequireAuth: React.FC<RequireAuthType> = React.memo(({children}: any) => {\r\n\r\n    const location = useLocation();\r\n    const {authUser:user} = useAuth();\r\n\r\n    if (!user.id) {\r\n        //если не авторизованы - сделаем переадресацию\r\n        //state={{from: location}} - уточняем откуда мы пришли\r\n        // чтобы после регистрации могли вернуться на страницу с которой был редирект\r\n        return <Navigate to={'/login'} state={{from: location}}/>\r\n    }\r\n    return children;//отрисовываем любую страницу переданную если можем на неё попасть\r\n})","import React from 'react';\r\nimport {Link, Outlet} from \"react-router-dom\";\r\nimport s from './About.module.scss'\r\n\r\n\r\ntype AboutPageType = {}\r\nexport const AboutPage: React.FC<AboutPageType> = React.memo(() => {\r\n\r\n    return (\r\n        <div className={s.about}>\r\n            <div className={s.container}>\r\n                <h2 className={s.title}>About us</h2>\r\n                <div className={s.about__links}>\r\n                    <ul>\r\n                        <li><Link  className={s.link} to={'contacts'}>Our\r\n                            contacts</Link></li>\r\n                        <li><Link className={s.link} to={'team'}>Our team</Link>\r\n                        </li>\r\n                        <li><Link className={s.link} to={'products'}>Our products</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n                {/*<Routes>\r\n                    <Route path={'contacts'}\r\n                           element={<p>+375 29 151 25 30</p>}/>\r\n                    <Route path={'team'}\r\n                           element={<p>Dimix company</p>}/>\r\n                </Routes>*/}\r\n                <Outlet />\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\n","import {format} from 'date-fns';\r\nimport {ColumnFilter} from \"./Table/ColumnsFilter\";\r\n\r\nexport const COLUMNS = [\r\n    {\r\n        Header: 'Id',\r\n        Footer: 'Id',\r\n        accessor: 'id',\r\n        Filter: ColumnFilter,\r\n        sticky: 'left',\r\n    },\r\n    {\r\n        Header: 'First Name',\r\n        Footer: 'First Name',\r\n        accessor: 'first_name',\r\n        sticky: 'left',\r\n    },\r\n    {\r\n        Header: 'Last Name',\r\n        Footer: 'Last Name',\r\n        accessor: 'last_name',\r\n        sticky: 'left',\r\n    },\r\n    {\r\n        Header: 'Date of Birth',\r\n        Footer: 'Date of Birth',\r\n        accessor: 'date_of_birth',\r\n        Cell: ({value}: { value: Date }) => {\r\n            return format(new Date(value), 'dd/MM/yyyy')\r\n        },\r\n    },\r\n    {\r\n        Header: 'Country',\r\n        Footer: 'Country',\r\n        accessor: 'country',\r\n    },\r\n    {\r\n        Header: 'Phone',\r\n        Footer: 'Phone',\r\n        accessor: 'phone',\r\n    },\r\n    //для stickyColumns\r\n    {\r\n        Header: 'Email',\r\n        Footer: 'Email',\r\n        accessor: 'email',\r\n    },\r\n    {\r\n        Header: 'Age',\r\n        Footer: 'Age',\r\n        accessor: 'age',\r\n    },\r\n];\r\n\r\nexport const GROUPED_COLUMNS = [\r\n    {\r\n        Header: 'Id',\r\n        Footer: 'Id',\r\n        accessor: 'id',\r\n       // Filter: ColumnFilter,\r\n        disableFilters: true //убрали фильтрацию\r\n    },\r\n    {\r\n        Header: 'Name',\r\n        Footer: 'Name',\r\n        columns: [\r\n            {\r\n                Header: 'First Name',\r\n                Footer: 'First Name',\r\n                accessor: 'first_name',\r\n             //   Filter: ColumnFilter,\r\n            },\r\n            {\r\n                Header: 'Last Name',\r\n                Footer: 'Last Name',\r\n                accessor: 'last_name',\r\n              //  Filter: ColumnFilter,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        Header: 'Info',\r\n        Footer: 'Info',\r\n        columns: [\r\n            {\r\n                Header: 'Date of Birth',\r\n                Footer: 'Date of Birth',\r\n                accessor: 'date_of_birth',\r\n                Cell: ({value}: { value: Date }) => {\r\n                    return format(new Date(value), 'dd/MM/yyyy')\r\n                },\r\n              //  Filter: ColumnFilter,\r\n            },\r\n            {\r\n                Header: 'Country',\r\n                Footer: 'Country',\r\n                accessor: 'country',\r\n               // Filter: ColumnFilter,\r\n            },\r\n            {\r\n                Header: 'Phone',\r\n                Footer: 'Phone',\r\n                accessor: 'phone',\r\n              //  Filter: ColumnFilter,\r\n            },\r\n        ]\r\n    },\r\n]","import {\r\n    useTable,\r\n    usePagination,\r\n    UsePaginationInstanceProps,\r\n    TableInstance\r\n} from \"react-table\";\r\nimport MOCK_DATA from '../../../data/MOCK_DATA.json';\r\nimport {COLUMNS, GROUPED_COLUMNS} from \"../column\";\r\nimport {useMemo} from \"react\";\r\nimport './BsicTable.css'\r\n\r\nexport const PaginationTable = () => {\r\n\r\n    // const columns = useMemo(() => COLUMNS, []);\r\n    const columns = useMemo(() => GROUPED_COLUMNS, []);\r\n    const data = useMemo(() => MOCK_DATA, []);\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        page,\r\n        nextPage,\r\n        previousPage,\r\n        canNextPage,\r\n        canPreviousPage,\r\n        pageOptions,\r\n        gotoPage,\r\n        pageCount,\r\n        setPageSize,\r\n        state,\r\n        prepareRow,\r\n    } = useTable({\r\n        // @ts-ignore\r\n        columns,\r\n        data,\r\n\r\n        initialState: {pageIndex: 3} as any //стартовая страница 4\r\n    }, usePagination) as UsePaginationInstanceProps<any> & TableInstance<any>;\r\n\r\n    const {pageIndex, pageSize} = state as any;\r\n\r\n    return (\r\n        <>\r\n            <table {...getTableProps()}>\r\n                <thead>\r\n                {\r\n                    headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {\r\n                                headerGroup.headers.map(column => (\r\n                                    <th {...column.getHeaderProps()}>\r\n                                        {column.render('Header')}\r\n                                    </th>\r\n                                ))\r\n                            }\r\n                        </tr>\r\n                    ))\r\n                }\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                {\r\n                    page.map((row: any) => {\r\n                        prepareRow(row);\r\n                        return (\r\n\r\n                            <tr {...row.getRowProps()}>\r\n                                {\r\n\r\n                                    row.cells.map((cell: any) => {\r\n                                        return <td {...cell.getCellProps()}>\r\n                                            {cell.render('Cell')}\r\n                                        </td>\r\n                                    })\r\n                                }\r\n                            </tr>\r\n                        )\r\n                    })\r\n                }\r\n                </tbody>\r\n            </table>\r\n            <div className={'btns'}>\r\n                <span>\r\n                Page {' '}\r\n                    <strong>\r\n                        {pageIndex + 1} of {pageOptions.length}\r\n                    </strong>\r\n                </span>\r\n                <span>\r\n                    | Go to page: {' '}\r\n                    <input\r\n                        className={'input'}\r\n                        type={'number'}\r\n                        defaultValue={pageIndex + 1}\r\n                        onChange={e => {\r\n                            const pageNumber = e.target.value\r\n                                ? Number(e.target.value) - 1\r\n                                : 0;\r\n                            gotoPage(pageNumber);\r\n                        }}\r\n                    />\r\n                </span>\r\n                <select\r\n                    className={'select'}\r\n                    value={pageSize}\r\n                    onChange={e => setPageSize(Number(e.target.value))}\r\n                    >\r\n                    {\r\n                        [10,25,50].map(pageSize => (\r\n                            <option key={pageSize} value={pageSize}>\r\n                                Show {pageSize}\r\n                            </option>\r\n                        ))\r\n                    }\r\n                </select>\r\n                <button disabled={!canPreviousPage}\r\n                        onClick={() => gotoPage(0)}>{'<<'}\r\n                </button>\r\n                <button disabled={!canPreviousPage}\r\n                        onClick={() => previousPage()}>Previous\r\n                </button>\r\n                <button disabled={!canNextPage}\r\n                        onClick={() => nextPage()}>Next\r\n                </button>\r\n                <button disabled={!canNextPage}\r\n                        onClick={() => gotoPage(pageCount - 1)}>{'>>'}\r\n                </button>\r\n            </div>\r\n            {/*{\r\n                pageOptions.map((p:any) => (\r\n                    <span onClick={() => gotoPage(p)}>{p + 1}</span>\r\n                ))\r\n            }*/}\r\n        </>\r\n    )\r\n}","import {BasicTable} from \"./Table/BasicTable\";\r\nimport {SortingTable} from \"./Table/SortingTable\";\r\nimport {FilteringTable} from \"./Table/FilteringTable\";\r\nimport {PaginationTable} from \"./Table/PaginationTable\";\r\nimport {RowSelection} from \"./Table/RowSelection\";\r\nimport {ColumnOrder} from \"./Table/ColumnOrder\";\r\nimport {ColumnHiding} from \"./Table/ColumnHiding\";\r\nimport {StickyTable} from \"./Table/StickyTable\";\r\n\r\nexport const OurTeam = () => {\r\n    return (\r\n        <div>\r\n            {/*<BasicTable />*/}\r\n            {/*<SortingTable />*/}\r\n            {/*<FilteringTable />*/}\r\n            <PaginationTable />\r\n            {/*<RowSelection />*/}\r\n            {/*<ColumnOrder />*/}\r\n            {/*<ColumnHiding />*/}\r\n            {/*<StickyTable />*/}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport '../OurTeam/Table/BsicTable.css'\r\nimport {useState} from \"react\";\r\nimport {useAsyncDebounce} from \"react-table\";\r\n\r\ntype GlobalFilterType = {\r\n    preGlobalFilteredRows: any,\r\n    globalFilter: any,\r\n    setGlobalFilter: any\r\n}\r\nexport const GlobalFilter: React.FC<GlobalFilterType> = (\r\n    {\r\n        preGlobalFilteredRows,\r\n        globalFilter,\r\n        setGlobalFilter,\r\n    }) => {\r\n\r\n    const count = preGlobalFilteredRows.length;\r\n    const [value, setValue] = useState(globalFilter);\r\n\r\n    const onChange = useAsyncDebounce((value:string) => {\r\n        setGlobalFilter(value || undefined)\r\n    },400)\r\n\r\n    return (\r\n        <>\r\n            <label htmlFor=\"search\">Search</label>\r\n            <input\r\n                id={'search'}\r\n                className={'input'}\r\n                type=\"text\"\r\n                value={value || ''}\r\n                onChange={(e) => {\r\n                    setValue(e.target.value);\r\n                    onChange(e.target.value)\r\n                }}\r\n                placeholder={`${count} records...`}\r\n            />\r\n        </>\r\n    )\r\n}","import '../OurTeam/Table/BsicTable.css'\r\nimport {useEffect, useMemo, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {useGlobalFilter, useSortBy, useTable} from \"react-table\";\r\nimport {GlobalFilter} from \"./GlobalFilter\";\r\n\r\n\r\n//https://fakestoreapi.com/products\r\ntype ResponseGetProductsType = {\r\n    id: number,\r\n    title: string,\r\n    price: number,\r\n    description: string,\r\n    category: string,\r\n    image: string,\r\n    rating: {\r\n        rate: number,\r\n        count: number\r\n    }\r\n}\r\nexport const OurProducts = () => {\r\n\r\n    const [products, setProducts] = useState<Array<ResponseGetProductsType>>([]);\r\n\r\n    const fetchProducts = async () => {\r\n        try {\r\n            const response = await axios.get<Array<ResponseGetProductsType>>('https://fakestoreapi.com/products');\r\n            setProducts(response.data)\r\n        } catch (e) {\r\n            console.log(e )\r\n        }\r\n    }\r\n\r\n    const productsData = useMemo(() => [...products], [products]);\r\n    const productsColumns = useMemo(() => products[0]\r\n        ? Object.keys(products[0]).filter(key => key !== 'rating').map(key => {\r\n\r\n            //сделаем чтобы картинка отображалась\r\n            if(key === 'image') {\r\n                return {\r\n                    Header: key,\r\n                    accessor: key,\r\n                    Cell: ({value}: {value:string}) => <img className={'image'} src={value} alt=\"value\"/>,\r\n                }\r\n            }\r\n            return {\r\n                Header: key === 'id' ? 'Number' : key, //переименуем таблицу id на number\r\n                accessor: key\r\n            }\r\n        })\r\n        : []\r\n        , [products])\r\n\r\n    const tableHooks = (hooks: any) => {\r\n        //добавим свою колонку\r\n        hooks.visibleColumns.push((columns: any) => [\r\n            ...columns,\r\n            {\r\n                id: 'Edit',\r\n                Header: 'Edit',\r\n                Cell: ({row}: any) => (\r\n                    <button className={'button'} onClick={() => {\r\n                        alert(row.values.price)\r\n                    }\r\n                    }>\r\n                        Edit\r\n                    </button>\r\n                )\r\n            }\r\n        ])\r\n    }\r\n\r\n    const tableInstance = useTable({\r\n            columns: productsColumns,\r\n            data: productsData\r\n        } as any,\r\n        useGlobalFilter, //важно чтобы перед tableHooks\r\n        tableHooks,\r\n        useSortBy,\r\n    );\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        //для сортировки\r\n        //@ts-ignore\r\n        preGlobalFilteredRows,\r\n        //@ts-ignore\r\n        setGlobalFilter,\r\n        state\r\n    } = tableInstance;\r\n\r\n    const isEven = (index: number) => index % 2 === 0;\r\n\r\n    useEffect(() => {\r\n        fetchProducts();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <GlobalFilter\r\n                preGlobalFilteredRows={preGlobalFilteredRows}\r\n                globalFilter={(state as any).globalFilter}\r\n                setGlobalFilter={setGlobalFilter}\r\n            />\r\n            <table {...getTableProps()}>\r\n                <thead>\r\n                {\r\n                    headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {\r\n                                headerGroup.headers.map(column => {\r\n                                    if(column.Header === 'price') { //сортировка только по цене\r\n                                        return (\r\n                                            <th {...column.getHeaderProps((column as any).getSortByToggleProps())}>\r\n                                                {\r\n                                                    column.render('Header')\r\n                                                }\r\n                                                {\r\n                                                    <span>\r\n                                                 {(column as any).isSorted\r\n                                                     ? (column as any).isSortedDesc\r\n                                                         ? '🔽'\r\n                                                         : '🔼'\r\n                                                     : ''}\r\n                                            </span>\r\n                                                }\r\n                                            </th>\r\n                                        )\r\n                                    } else{\r\n                                        return (\r\n                                            <th {...column.getHeaderProps()}>\r\n                                                {\r\n                                                    column.render('Header')\r\n                                                }\r\n                                            </th>\r\n                                        )\r\n                                    }\r\n\r\n                            })\r\n                            }\r\n                        </tr>\r\n                    ))\r\n                }\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                {\r\n                    rows.map((row, index) => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr\r\n                                {...row.getRowProps()}\r\n                                className={isEven(index) ? 'purple' : ''}>\r\n                                {\r\n\r\n                                    row.cells.map(cell => {\r\n                                        return <td {...cell.getCellProps()}>\r\n                                            {cell.render('Cell')}\r\n                                        </td>\r\n                                    })\r\n                                }\r\n                            </tr>\r\n                        )\r\n                    })\r\n                }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}","import {getAuth, signInWithEmailAndPassword} from 'firebase/auth'\r\nimport {useCallback, useState} from \"react\";\r\nimport {useAuth} from \"../../../hook/useAuth\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useQuery} from \"react-query\";\r\n\r\nexport type InfoType = {\r\n    name:string,\r\n    email: string,\r\n    password: string,\r\n    fromPage?: string\r\n}\r\n\r\nconst signUser = async (email: string, password: string) => {\r\n    const auth = getAuth();\r\n    return signInWithEmailAndPassword(auth, email, password);\r\n}\r\n\r\nexport const useSignIn = () => {\r\n    const {authDispatch} = useAuth();\r\n\r\n    const [info, setInfo] = useState<InfoType>({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        fromPage: '',\r\n    });\r\n\r\n    const navigate = useNavigate(); //является функцией\r\n    const{error, isLoading} = useQuery(\r\n        ['user', `${info.email}${info.password}`],\r\n        () => signUser(info.email, info.password),\r\n        {\r\n            enabled: !!info.email,\r\n            staleTime: 0,\r\n            cacheTime: 0,\r\n\r\n            onSuccess: (data) => {\r\n                authDispatch({\r\n                    type: 'set-user', payload: {\r\n                        name: info.name,\r\n                        email: data.user.email,\r\n                        id: data.user.uid\r\n                    }\r\n                });\r\n                navigate(`${info.fromPage}`, {replace: true});\r\n            },\r\n        }\r\n    )\r\n\r\n    const setInfoHandler = useCallback((name:string, fromPage: string, email: string, password: string) => {\r\n        setInfo({name, fromPage, email, password})\r\n    }, [])\r\n\r\n    return {\r\n        setInfoHandler,\r\n        error,\r\n        isLoading\r\n    }\r\n}","import React, {FormEvent, useState} from 'react';\r\nimport s from './Login.module.scss'\r\n\r\n\r\ntype FormType = {\r\n    title:string,\r\n    callback:(name:string, email:string, password:string) => void\r\n}\r\nexport const Form: React.FC<FormType> = React.memo((props) => {\r\n    const {title, callback} = props;\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        if (email && password.length > 6) {\r\n            callback(name, email,password )\r\n        }\r\n        //replace:true - по кнопке назад не сможем вернутся на страницу логинизации\r\n    }\r\n\r\n    return (\r\n        <div className={s.login}>\r\n            <h1 className={s.title}>{title}</h1>\r\n            <form onSubmit={handleSubmit} className={s.inputs}>\r\n                <input type=\"text\" placeholder={'Name'} value={name}\r\n                       onChange={e => setName(e.currentTarget.value)}\r\n                />\r\n                <input type=\"email\" placeholder={'Email'} value={email}\r\n                       onChange={e => setEmail(e.currentTarget.value)}\r\n                />\r\n                <input type=\"password\" value={password}\r\n                       onChange={e => setPassword(e.currentTarget.value)}\r\n                       placeholder={'Password'}\r\n                       pattern='^.{6,}$'\r\n                />\r\n                <button type={'submit'} className={s.submit}>Enter</button>\r\n            </form>\r\n            {/*{fromPage} например будет надпись 'post/new' - вы хотели попасть сюда а попали на логин*/}\r\n        </div>\r\n    );\r\n})\r\n\r\n","import React from \"react\";\r\nimport {Link, useLocation} from \"react-router-dom\";\r\nimport {useSignIn} from \"../../Login/hook/useSignIn\";\r\nimport {Form} from \"../../Login/Form\";\r\nimport s from '../LoginPage.module.scss'\r\n\r\n\r\nexport const Login = React.memo(() => {\r\n\r\n    const location = useLocation();\r\n    const {setInfoHandler, isLoading, error} = useSignIn();\r\n\r\n    //получаем инфу откуда мы пришли\r\n    const fromPage = (location.state as any)?.from?.pathname || '/';\r\n\r\n    const handleSubmit = (name:string, email: string, password: string) => {\r\n        setInfoHandler(name, fromPage, email, password)\r\n    }\r\n\r\n    return (\r\n        <div className={s.login}>\r\n            <Form title={'Sign in'} callback={handleSubmit}/>\r\n            <Link to={'/register'}> Create an account</Link>\r\n            {\r\n                isLoading && <p style={{\r\n                    marginTop: '5px',\r\n                    color: 'purple',\r\n                    fontSize: '18px',\r\n                    letterSpacing: '1px',\r\n                }}>loading...</p>\r\n            }\r\n            {\r\n                error && <p style={{\r\n                    marginTop: '5px',\r\n                    color: 'red'\r\n                }}>{(error as any).toString()}</p>\r\n            }\r\n        </div>\r\n    )\r\n})","import {createUserWithEmailAndPassword, getAuth} from 'firebase/auth'\r\nimport {useCallback, useState} from \"react\";\r\nimport {useAuth} from \"../../../hook/useAuth\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {InfoType} from \"./useSignIn\";\r\nimport {useQuery} from \"react-query\";\r\n\r\n\r\nconst registerUser = async (email: string, password: string) => {\r\n    const auth = getAuth();\r\n    return createUserWithEmailAndPassword(auth, email, password);\r\n}\r\n\r\nexport const useRegister = () => {\r\n    const {authDispatch} = useAuth();\r\n    const navigate = useNavigate(); //является функцией\r\n    \r\n    const [info, setInfo] = useState<InfoType>({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n    })\r\n\r\n    const {error, isLoading} = useQuery(\r\n        ['user', `${info.email}${info.password}`],\r\n        () => registerUser(info.email, info.password),\r\n        {\r\n            enabled: !!info.email,\r\n            staleTime: 0,\r\n            cacheTime: 0,\r\n\r\n            onSuccess: (data) => {\r\n                authDispatch({\r\n                    type: 'set-user', payload: {\r\n                        name: info.name,\r\n                        email: data.user.email,\r\n                        id: data.user.uid\r\n                    }\r\n                });\r\n                navigate(`${info.fromPage}`, {replace: true});\r\n            }\r\n        }\r\n    )\r\n\r\n    const setInfoHandler = useCallback((name: string, email: string, password: string) => {\r\n        setInfo({name, email, password})\r\n    }, [])\r\n\r\n\r\n    return {\r\n        setInfoHandler,\r\n        error,\r\n        isLoading,\r\n    }\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useRegister} from \"../../Login/hook/useRegister\";\r\nimport {Form} from \"../../Login/Form\";\r\nimport s from '../LoginPage.module.scss'\r\n\r\nexport const Register = React.memo(() => {\r\n\r\n    const {error, isLoading, setInfoHandler} = useRegister();\r\n\r\n    const handleSubmit = (name:string, email: string, password: string) => {\r\n        setInfoHandler(name, email, password)\r\n        //replace:true - по кнопке назад не сможем вернутся на страницу логинизации\r\n    }\r\n\r\n    return (\r\n        <div className={s.login}>\r\n            <Form title={'Registration'} callback={handleSubmit}/>\r\n            <p>\r\n                Already have an account ?\r\n                <Link to={'/login'}> Sign in</Link>\r\n            </p>\r\n            {\r\n                isLoading && <p style={{\r\n                    marginTop: '5px',\r\n                    color: 'purple',\r\n                    fontSize: '18px',\r\n                    letterSpacing: '1px',\r\n                }}>loading...</p>\r\n            }\r\n            {\r\n                error && <p style={{\r\n                    marginTop: '5px',\r\n                    color: 'red'\r\n                }}>{(error as any).toString()}</p>\r\n            }\r\n        </div>\r\n    )\r\n})","import React from 'react';\r\nimport './App.css'\r\nimport {Home} from \"./pages/Home/Home\";\r\nimport {Post} from \"./pages/Post/Post\";\r\nimport {Navigate, Route, Routes} from \"react-router-dom\";\r\nimport {NewPost} from \"./pages/NewPost/NewPost\";\r\nimport {EditedPost} from \"./pages/EditPost/EditedPost\";\r\nimport {Layout} from \"./Layout\";\r\n\r\nimport {RequireAuth} from \"./hoc/RequireAuth\";\r\nimport {AboutPage} from \"./pages/About/About\";\r\nimport {OurTeam} from \"./pages/OurTeam/OurTeam\";\r\nimport {OurProducts} from \"./pages/Products/Products\";\r\nimport {Login} from \"./pages/LoginPage/Login/Login\";\r\nimport {Register} from \"./pages/LoginPage/Register/Register\";\r\nimport {useAuth} from \"./hook/useAuth\";\r\n\r\nexport const App = () => {\r\n    const {authUser} = useAuth();\r\n\r\n    return (\r\n            <Routes>\r\n                <Route path={`/`} element={<Layout/>}>\r\n                    <Route path={`/`} element={<Navigate to={`home/:${authUser.id}`}/>}/>\r\n                    <Route path={`home/:${authUser.id}`} element={<Home/>}/>\r\n                    <Route path={'login'} element={<Login/>}/>\r\n                    <Route path={'register'} element={<Register/>}/>\r\n                    <Route path={'post/:id'} element={\r\n                        <RequireAuth>\r\n                            <Post/>\r\n                        </RequireAuth>\r\n                    }/>\r\n\r\n                    <Route path={'post/new'} element={\r\n                        <RequireAuth>\r\n                            {/*когда пользователь попробует перейти по адресу'post/new'\r\n                                он сначала попадет в RequireAuth, если авторизован -\r\n                                вернем в children - т.е. <NewPost/> , иначе будет редирект*/}\r\n                            <NewPost/>\r\n                        </RequireAuth>\r\n                    }/>\r\n\r\n                    {/*вариант когда два пути ведут на один компонент*/}\r\n                    {/*<Route path={'post/create'} element={<NewPost/>}/>*/}\r\n\r\n                    {/*replace - не сохранит в истории посещение post/create*/}\r\n                    <Route path={'post/create'}\r\n                           element={<Navigate to={'/post/new'} replace/>}/>\r\n                    <Route path={'post/:id/edit'} element={<EditedPost/>}/>\r\n\r\n                    {/*about/* -любой адрес который начинается с about/ всегда имеет компонент AboutPage*/}\r\n                    <Route path={'about'} element={<AboutPage/>}>\r\n                        <Route path={'contacts'}\r\n                               element={<p>+375 29 151 25 30</p>}/>\r\n                        <Route path={'team'}\r\n                               element={<OurTeam/>}/>\r\n                        <Route path={'products'}\r\n                               element={<OurProducts/>}/>\r\n                    </Route>\r\n                    <Route path={'*'} element={<div>Ошибка</div>}/>\r\n                </Route>\r\n            </Routes>\r\n    );\r\n}\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {QueryClient} from \"react-query\";\r\n\r\n\r\nexport const queryClient = new QueryClient({\r\n    defaultOptions: {\r\n        queries: {\r\n            staleTime: 600000,\r\n            cacheTime: 900000,\r\n            refetchOnWindowFocus:false,\r\n            refetchOnMount:false,\r\n            refetchOnReconnect:false,\r\n        }\r\n    }\r\n})","import {createContext} from \"react\";\r\nimport {AppStateType} from \"../providers/AppProvider\";\r\n\r\nexport enum AppActionOperationType {\r\n    SetErrorApp = 'set-error-app',\r\n    Default = 'default'\r\n}\r\n\r\nexport type AppActionsType = {\r\n    type: `${AppActionOperationType}`,\r\n    payload: AppStateType\r\n}\r\n\r\nexport type AppDispatchType = (action: AppActionsType) => void;\r\nexport type AppContextType = { appState: AppStateType, appDispatch: AppDispatchType };\r\n\r\nexport const AppContext = createContext<AppContextType | undefined>(undefined)","import {\r\n    AppActionOperationType,\r\n    AppActionsType,\r\n} from \"../context/app-context\";\r\nimport {AppStateType} from \"../providers/AppProvider\";\r\n\r\n\r\ntype AppReducerReturnType = {\r\n    [key in `${AppActionOperationType}`]: () => AppStateType\r\n}\r\n\r\nexport const appReducer = (state: AppStateType, action: AppActionsType): AppStateType => {\r\n\r\n    const setError = (): AppStateType => {\r\n        return {\r\n            ...state,\r\n            error: action.payload.error,\r\n        }\r\n    }\r\n    const actions = {\r\n        'set-error-app': setError,\r\n    } as AppReducerReturnType\r\n\r\n    return (actions[action.type] || actions['default'])()\r\n}","import React, {ReactElement, useMemo, useReducer} from \"react\";\r\nimport {AppContext} from \"../context/app-context\";\r\nimport {appReducer} from \"../reducer/app-reducer\";\r\n\r\nexport type AppStateType = {\r\n    error: string | null\r\n}\r\n\r\nexport const AppProvider = ({children}: { children: ReactElement }) => {\r\n\r\n    const [appState, appDispatch] = useReducer(appReducer, {\r\n        error: null,\r\n    })\r\n\r\n    const value = useMemo(() => ({\r\n        appState, appDispatch\r\n    }), [appState])\r\n\r\n    return <AppContext.Provider value={value}>\r\n        {children}\r\n    </AppContext.Provider>\r\n}","import {userType} from \"../providers/AuthProvider\";\r\n\r\nconst PROJECT_INFO_LOCALSTORAGE_KEY = 'project-firebase';\r\n\r\nexport const getInfoUserStorage = (): userType | null => {\r\n    const storedInfo = localStorage.getItem(PROJECT_INFO_LOCALSTORAGE_KEY);\r\n    return storedInfo ? JSON.parse(storedInfo) : null\r\n}\r\n\r\nexport const setInfoUserStorage = (info:userType):void => {\r\n    localStorage.setItem(PROJECT_INFO_LOCALSTORAGE_KEY, JSON.stringify(info))\r\n}","import { initializeApp } from \"firebase/app\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGIN_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n};\r\n\r\n\r\nconst appFireBase = initializeApp(firebaseConfig);","import {\r\n    AuthActionOperationType,\r\n    AuthActionsType\r\n} from \"../context/auth-context\";\r\nimport {userType} from \"../providers/AuthProvider\";\r\nimport {setInfoUserStorage} from \"../helpers/helper-storage\";\r\n\r\n\r\nexport type AuthReducerReturnType = {\r\n    [key in `${AuthActionOperationType}`]: () => userType\r\n}\r\n\r\nexport const authReducer = (state: userType, action: AuthActionsType): userType => {\r\n\r\n    const signIn = (): userType => {\r\n        setInfoUserStorage(action.payload as userType)\r\n        return {...action.payload as userType}\r\n    }\r\n\r\n    const signOut = (): userType => {\r\n        setInfoUserStorage({name: null, email: null, id: null})\r\n        return {...state, name: null, email: null, id: null}\r\n    }\r\n\r\n    const actions = {\r\n        'set-user': signIn,\r\n        'delete-user': signOut,\r\n        'default': () => state\r\n    } as AuthReducerReturnType\r\n\r\n    return (actions[action.type] || actions['default'])()\r\n}","import React, {ReactElement, useMemo, useReducer} from \"react\";\r\nimport {AuthContext} from \"../context/auth-context\";\r\nimport {authReducer} from \"../reducer/auth-reducer\";\r\nimport {getInfoUserStorage} from \"../helpers/helper-storage\";\r\n\r\n\r\nexport type userType = {\r\n    name: string | null,\r\n    email: string | null,\r\n    id: string | null,\r\n}\r\n\r\nexport const AuthProvider = ({children}: { children: ReactElement }) => {\r\n\r\n    const [authUser, authDispatch] = useReducer(authReducer, {\r\n        name: getInfoUserStorage()?.name || null,\r\n        email: getInfoUserStorage()?.email ||null,\r\n        id: getInfoUserStorage()?.id ||null,\r\n    })\r\n\r\n    const value = useMemo(() => ({\r\n        authUser, authDispatch\r\n    }), [authUser])\r\n\r\n    return <AuthContext.Provider value={value}>\r\n        {children}\r\n    </AuthContext.Provider>\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {App} from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {QueryClientProvider} from \"react-query\";\r\nimport {queryClient} from \"./hook/react-query/query-client\";\r\nimport {ReactQueryDevtools} from \"react-query/devtools\";\r\nimport {AppProvider} from \"./providers/AppProvider\";\r\nimport './firebase';\r\nimport {AuthProvider} from \"./providers/AuthProvider\"; //для firebase\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <AppProvider>\r\n            <AuthProvider>\r\n                <QueryClientProvider client={queryClient}>\r\n                    <App/>\r\n                    <ReactQueryDevtools/>\r\n                </QueryClientProvider>\r\n            </AuthProvider>\r\n        </AppProvider>\r\n    </BrowserRouter>,\r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__29Bo1\",\"container\":\"Navbar_container__2-FHk\",\"logo\":\"Navbar_logo__3UNU7\",\"link\":\"Navbar_link__N9678\",\"list\":\"Navbar_list__3l7qx\",\"list__item\":\"Navbar_list__item__184IY\",\"avatar\":\"Navbar_avatar__-RvgC\",\"btn\":\"Navbar_btn__1LZQi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__pDdwA\",\"container\":\"Post_container__17ODK\",\"image\":\"Post_image__272Z6\",\"title\":\"Post_title__1VrWi\",\"postDesc\":\"Post_postDesc__1sW6C\",\"longDesc\":\"Post_longDesc__2HLol\",\"link\":\"Post_link__1HeQT\",\"btn\":\"Post_btn__2LuHB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"about\":\"About_about__3scUy\",\"container\":\"About_container__1QuHB\",\"title\":\"About_title__32Yks\",\"about__links\":\"About_about__links__hikBJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2HZtw\",\"link\":\"Card_link___pBQX\",\"title\":\"Card_title__2qS-a\",\"image\":\"Card_image__3CSwf\",\"btn\":\"Card_btn__3glp2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Card_Filter_form__1gmQJ\",\"labelCheckbox\":\"Card_Filter_labelCheckbox__1vhOx\",\"checkbox\":\"Card_Filter_checkbox__2pQxG\",\"input\":\"Card_Filter_input__3FxfY\",\"button\":\"Card_Filter_button__2k6Fy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__2ski_\",\"title\":\"Login_title__2-20L\",\"body\":\"Login_body__yEIAO\",\"btns\":\"Login_btns__2Gg42\",\"loginBtn\":\"Login_loginBtn__3e0pU\",\"center\":\"Login_center__1EP40\",\"or\":\"Login_or__3NfX7\",\"line\":\"Login_line__1Y9KI\",\"inputs\":\"Login_inputs__1Q4gU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"LoginPage_login__3Hys-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__Uabgx\",\"row\":\"Home_row__3zBS-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"CustomLink_link__3l8gV\",\"active\":\"CustomLink_active__3NTqY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EditedPost_container__3qhfS\",\"btn\":\"EditedPost_btn__bOG4F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"FilteringTable_input__yOqQR\"};"],"sourceRoot":""}